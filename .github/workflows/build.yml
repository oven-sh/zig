name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linux_amd64:
    name: Linux AMD64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      matrix:
        os: [ubuntu-18.04]
        arch: [amd64]

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Run
        run: |
          docker buildx build -f Dockerfile --progress=plain --platform=linux/${{matrix.arch}} --target=artifact --output type=local,dest=/tmp/zig .
          cd /tmp
          tar -czf zig-linux-${{matrix.arch}}.tar.gz zig
      - uses: actions/upload-artifact@v3
        with:
          name: zig-linux-${{matrix.arch}}
          path: /zig-linux-${{matrix.arch}}.tar.gz
  macos:
    name: macOS
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      matrix:
        os: [macos-11]
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - name: PATH
        run: |
          echo "/usr/local/opt/llvm@13/bin" >> $GITHUB_PATH
          brew install llvm@13 python icu4c ninja
          brew link llvm@13 --overwrite
      - name: Run
        env:
          LDFLAGS: "-L/usr/local/opt/llvm@13/lib"
          CPPFLAGS: "-I/usr/local/opt/llvm@13/include"
          ICU_INCLUDE_DIRS: /usr/local/opt/icu4c/include
          CC: "/usr/local/opt/llvm@13/bin/clang"
          CXX: "/usr/local/opt/llvm@13/bin/clang++"
          CMAKE_C_COMPILER: "/usr/local/opt/llvm@13/bin/clang"
          CMAKE_CXX_COMPILER: "/usr/local/opt/llvm@13/bin/clang++"
        run: |
          mkdir -p build
          cd build
          cmake .. -DZIG_STATIC_LLVM=on -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=${{matrix.arch}}
          make -j$(nproc)
          cd ..
          mkdir /tmp/zig-macos-${{matrix.arch}}
          cp build/zig* /tmp/zig-macos-${{matrix.arch}}
          cp -r lib /tmp/zig-macos-${{matrix.arch}}
          cd /tmp
          tar -czf zig-macos-${{matrix.arch}}.tar.gz /tmp/zig-macos-${{matrix.arch}}
      - uses: actions/upload-artifact@v3
        name: Upload
        with:
          name: zig-macos-${{matrix.arch}}
          path: /tmp/zig-macos-${{matrix.arch}}.tar.gz

  release:
    name: Release
    runs-on: ubuntu-18.04
    timeout-minutes: 90
    needs:
      - linux_amd64
      - macos
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: zig-linux-amd64.tar.gz
          path: /tmp/zig-linux-amd64.tar.gz
      - uses: actions/download-artifact@v3
        with:
          name: zig-macos-x86_64.tar.gz
          path: /tmp/zig-macos-x86_64.tar.gz
      - uses: actions/download-artifact@v3
        with:
          name: zig-macos-aarch64.tar.gz
          path: /tmp/zig-macos-aarch64.tar.gz
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Latest"
          files: |
            - /tmp/zig-linux-amd64.tar.gz
            - /tmp/zig-macos-x86_64.tar.gz
            - /tmp/zig-macos-aarch64.tar.gz
